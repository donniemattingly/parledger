[{"/Users/donnie/code/parledger/src/index.js":"1","/Users/donnie/code/parledger/src/App.js":"2","/Users/donnie/code/parledger/src/reportWebVitals.js":"3","/Users/donnie/code/parledger/src/TestComponent.js":"4","/Users/donnie/code/parledger/src/pages/LoginPage.js":"5","/Users/donnie/code/parledger/src/theme.js":"6","/Users/donnie/code/parledger/src/components/AppContainer.js":"7","/Users/donnie/code/parledger/src/pages/SignUpPage.js":"8","/Users/donnie/code/parledger/src/pages/UserInfoPage.js":"9","/Users/donnie/code/parledger/src/components/PrivateRoute.js":"10","/Users/donnie/code/parledger/src/components/Home.js":"11","/Users/donnie/code/parledger/src/pages/HomePage.js":"12","/Users/donnie/code/parledger/src/components/Feed.js":"13","/Users/donnie/code/parledger/src/pages/JoinGroupPage.js":"14","/Users/donnie/code/parledger/src/pages/NewWagerPage.js":"15","/Users/donnie/code/parledger/src/components/PulseSpinner.js":"16","/Users/donnie/code/parledger/src/stores/store.js":"17","/Users/donnie/code/parledger/src/stores/wagers.js":"18","/Users/donnie/code/parledger/src/components/SelectOpponent.js":"19","/Users/donnie/code/parledger/src/components/SelectEvent.js":"20","/Users/donnie/code/parledger/src/components/SportSelect.js":"21","/Users/donnie/code/parledger/src/components/ConfirmWager.js":"22","/Users/donnie/code/parledger/src/components/SplashScreen.js":"23","/Users/donnie/code/parledger/src/components/PersonalWagers.js":"24","/Users/donnie/code/parledger/src/styles.js":"25"},{"size":500,"mtime":1608599661043,"results":"26","hashOfConfig":"27"},{"size":3072,"mtime":1609430684566,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1608165066404,"results":"29","hashOfConfig":"27"},{"size":417,"mtime":1608171558541,"results":"30","hashOfConfig":"31"},{"size":1712,"mtime":1609429976129,"results":"32","hashOfConfig":"27"},{"size":2581,"mtime":1609162633781,"results":"33","hashOfConfig":"31"},{"size":2280,"mtime":1609434577487,"results":"34","hashOfConfig":"27"},{"size":1760,"mtime":1609426281464,"results":"35","hashOfConfig":"27"},{"size":391,"mtime":1609526395951,"results":"36","hashOfConfig":"27"},{"size":1475,"mtime":1609430328630,"results":"37","hashOfConfig":"27"},{"size":215,"mtime":1608222572390,"results":"38","hashOfConfig":"31"},{"size":110,"mtime":1608602463336,"results":"39","hashOfConfig":"27"},{"size":313,"mtime":1609526432958,"results":"40","hashOfConfig":"27"},{"size":3495,"mtime":1609262551129,"results":"41","hashOfConfig":"27"},{"size":1361,"mtime":1609529419690,"results":"42","hashOfConfig":"27"},{"size":709,"mtime":1609261303486,"results":"43","hashOfConfig":"31"},{"size":2794,"mtime":1609530926901,"results":"44","hashOfConfig":"27"},{"size":2662,"mtime":1609526384043,"results":"45","hashOfConfig":"27"},{"size":3677,"mtime":1609529111402,"results":"46","hashOfConfig":"27"},{"size":6993,"mtime":1609529643954,"results":"47","hashOfConfig":"27"},{"size":1311,"mtime":1609368196301,"results":"48","hashOfConfig":"27"},{"size":3482,"mtime":1609434343479,"results":"49","hashOfConfig":"27"},{"size":775,"mtime":1609430608821,"results":"50","hashOfConfig":"27"},{"size":7931,"mtime":1609528220092,"results":"51","hashOfConfig":"27"},{"size":475,"mtime":1609528209256,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"jjb2t2",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1j8il7e",{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"55"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/donnie/code/parledger/src/index.js",[],["118","119"],"/Users/donnie/code/parledger/src/App.js",[],"/Users/donnie/code/parledger/src/reportWebVitals.js",[],"/Users/donnie/code/parledger/src/TestComponent.js",["120","121"],"/Users/donnie/code/parledger/src/pages/LoginPage.js",["122","123"],"import {isLoaded, isEmpty, useFirebase} from \"react-redux-firebase\";\nimport {useStoreState} from \"easy-peasy\";\nimport {Redirect, useHistory} from 'react-router-dom';\nimport {StyledFirebaseAuth} from \"react-firebaseui\";\nimport {JoinGroupPage} from \"./JoinGroupPage\";\nimport React, {useState} from \"react\";\n\n// Configure FirebaseUI.\n\nexport function LoginPage({signup}) {\n    const firebase = useFirebase()\n    const auth = useStoreState(state => state.firebase.auth)\n    const [authLoaded, setAuthLoaded] = useState(false);\n    const history = useHistory();\n    const uiConfig = {\n        // Popup signin flow rather than redirect flow.\n        signInFlow: 'popup',\n        // We will display Google and Facebook as auth providers.\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\n        ],\n        callbacks: {\n            signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n                firebase.handleRedirectResult(authResult).then(() => {\n                    console.log('logged in');\n                    setAuthLoaded(true);\n                });\n                return false;\n            },\n        },\n    };\n\n    return (\n        <div>\n            <div>\n                {\n                    !isLoaded(auth)\n                        ? <span>Loading...</span>\n                        : isEmpty(auth)\n                        ? <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n                        : signup\n                            ? <JoinGroupPage/>\n                            : <Redirect to={{pathname: \"/home\",}}/>\n                }\n            </div>\n        </div>\n    )\n}\n","/Users/donnie/code/parledger/src/theme.js",[],"/Users/donnie/code/parledger/src/components/AppContainer.js",[],"/Users/donnie/code/parledger/src/pages/SignUpPage.js",["124","125","126"],"import \"./HomePage.css\";\nimport React from \"react\";\nimport {useFirebase} from \"react-redux-firebase\";\nimport signUpImage from \"../resources/undraw_Savings_re_eq4w.svg\"\nimport blob from \"../resources/blob_white.svg\"\nimport styled, {css} from 'styled-components';\nimport {useHistory} from 'react-router-dom';\n\nconst SignUpPageContainer = styled.div`\n  display: grid;\n  height: 100vh;\n  grid-template-columns: 1fr 1fr;\n  \n  max-width: 1000px;\n  margin: auto;\n\n  @media (max-width: 600px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst CtaContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst imageCss = css`\n  position: absolute;\n  width: 50%;\n  top: 10em;\n  right: 1em;\n`\n\nconst SignUpPageImageContainer = styled.div`\n  padding-left: 1em;\n  place-self: center center;\n  height: 100%;\n`\n\nconst SignUpPageImage = styled.img`\n  width: 100%;\n`\n\nconst SignUpButton = styled.button`\n  border-radius: 0.3em;\n  color: white;\n  font-size: 1.2em;\n  padding: 0.3em;\n  border: 1px solid white;\n  background: none;\n  \n  max-width: 200px;\n\n  :hover {\n    cursor: pointer;\n    background: #FFFFFF13;\n  }\n`\n\nexport const SignUpPage = () => {\n    const firebase = useFirebase()\n    const history = useHistory();\n\n    async function loginWithGoogle() {\n        history.push('/signup')\n    }\n\n    return (\n        <SignUpPageContainer>\n\n            <CtaContainer>\n                <h1>ledger.bet</h1>\n                <h3>\n                    make friendly bets\n                </h3>\n                <SignUpButton onClick={loginWithGoogle}>Sign Up</SignUpButton>\n            </CtaContainer>\n            <SignUpPageImageContainer>\n                <SignUpPageImage src={signUpImage}/>\n            </SignUpPageImageContainer>\n        </SignUpPageContainer>\n    )\n}","/Users/donnie/code/parledger/src/pages/UserInfoPage.js",["127"],"import {useStoreState} from \"easy-peasy\";\nimport {useFirestoreConnect} from \"react-redux-firebase\";\n\nexport const UserInfoPage = () => {\n    useFirestoreConnect([{collectionGroup: \"wagers\"}]);\n    const profile = useStoreState(state => state.firebase.profile)\n    const results = useStoreState(state => state.firestore.data.wagers)\n\n    return <pre>{JSON.stringify(results, null, 2)}</pre>\n}","/Users/donnie/code/parledger/src/components/PrivateRoute.js",[],"/Users/donnie/code/parledger/src/components/Home.js",[],["128","129"],"/Users/donnie/code/parledger/src/pages/HomePage.js",[],"/Users/donnie/code/parledger/src/components/Feed.js",["130","131","132"],"import {useFirestoreConnect} from \"react-redux-firebase\";\nimport {useStoreState} from \"easy-peasy\";\nimport {GroupWagers, PersonalWagers, useGroupWagers} from \"./PersonalWagers\";\n\nexport const Feed = () => {\n    return (\n        <div>\n            <PersonalWagers/>\n            <GroupWagers/>\n        </div>\n    )\n}","/Users/donnie/code/parledger/src/pages/JoinGroupPage.js",["133"],"import React, {useEffect, useState} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport styled from 'styled-components';\n\nimport {useStoreState} from \"easy-peasy\";\nimport {Link, useParams} from \"react-router-dom\"\nimport {isEmpty, useFirebase} from \"react-redux-firebase\";\n\nconst CreateGroupFormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n`\n\nexport const AocSubmit = styled.input.attrs({type: 'submit'})`\n    background: transparent;\n    border: 0;\n    font-family: inherit;\n    font-size: inherit;\n    margin: 0;\n    padding: 0;\n    color: #009900;\n    cursor: pointer;\n    width: 20em;\n    justify-content: start;\n    text-align: start;\n`\n\nexport const AocInput = styled.input`\n    background: transparent;\n    color: inherit;\n    border: 1px solid #666666;\n    background: #10101a;\n    padding: 0 2px;\n    font-family: inherit;\n    font-size: inherit;\n    margin: 0;\n    width: 20em;\n`\n\nexport const ErrorMessage = styled.span`\n  color: #800000;\n`\n\nexport const JoinGroupPage = ({...props}) => {\n    const [submitting, setSubmiting] = useState();\n    const {register, handleSubmit, errors} = useForm();\n    const [createGroupError, setCreateGroupError] = useState(null);\n    const [createGroupSuccess, setCreateGroupSuccess] = useState(null);\n    const [allowDerivatives] = useState(true);\n    const urlJoinCode = useParams()['joinCode'];\n    const savedJoinCode = useStoreState(state => state.joinCode);\n    const setJoinCode = () => {}\n    const auth = useStoreState(state => state.firebase.auth);\n    const joinCode = urlJoinCode || savedJoinCode || \"\";\n    const firebase = useFirebase();\n\n    useEffect(() =>{\n        if(urlJoinCode){\n            setJoinCode(urlJoinCode);\n        }\n    }, [urlJoinCode])\n\n    const onSubmit = async data => {\n        setSubmiting(true);\n        setCreateGroupError(null);\n        setCreateGroupSuccess(null);\n        try {\n            await firebase.functions().httpsCallable('joinGroup')(\n                {uid: auth.uid, allowDerivatives, ...data}\n            )\n            setCreateGroupSuccess(true);\n        } catch (error) {\n            setCreateGroupError(error.message);\n        }\n        setSubmiting(false);\n    }\n\n    if (isEmpty(auth)) {\n        return <div>\n            <p> You must <Link to={'/login'}>[log in]</Link> to join a group</p>\n        </div>\n    } else {\n\n        return (\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                    <div>\n                        <p>\n                            ledger.bet is invite only. Enter the code for your group to join.\n                        </p>\n                    </div>\n                    <span>\n                        <input name=\"joinCode\" defaultValue={joinCode} ref={register({required: true})}/>\n                        {' '}\n                        {(!submitting && !createGroupSuccess) && <button type='submit' value='Submit'>Submit</button>}\n                        {submitting && <span>submitting</span>}\n                    </span>\n                    {errors.joinCode &&\n                    <ErrorMessage>You must enter the join code </ErrorMessage>}\n                    <br/>\n                    {createGroupError && <ErrorMessage>{createGroupError}</ErrorMessage>}\n                    {createGroupSuccess &&\n                    <span>You joined the group! <Link to={'/groups'}>[View your groups]</Link></span>}\n                </form>\n            </div>\n        )\n    }\n}\n","/Users/donnie/code/parledger/src/pages/NewWagerPage.js",["134"],"import {useStoreActions, useStoreState} from \"easy-peasy\";\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {SelectOpponent} from \"../components/SelectOpponent\";\nimport {SelectEvent} from \"../components/SelectEvent\";\nimport {ConfirmWager} from \"../components/ConfirmWager\";\n\nexport const AppCell = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(to bottom, #FFFFFF04, #FFFFFF09);\n  box-shadow: 3px 3px 25px #0000001C;\n  padding: 1em;\n  border-radius: 0.3em;\n\n  max-width: 800px;\n  margin: auto;\n`\n\nexport const NewWagerPage = () => {\n    const profile = useStoreState(state => state.firebase.profile)\n    const updateEvents = useStoreActions(actions => actions.wagers.loadEvents);\n\n    const [opponent, setOpponent] = useState(null)\n    const [event, setEvent] = useState(null);\n\n    useEffect(() => (async () => {\n        await updateEvents().catch(console.error);\n    })(), [profile]);\n\n    if(opponent === null){\n        return (\n            <AppCell>\n                <SelectOpponent opponentSelected={setOpponent}/>\n            </AppCell>\n        )\n    } else if(event === null){\n        return (\n            <SelectEvent eventSelected={setEvent}/>\n        )\n    } else {\n        return (\n            <ConfirmWager selection={event} opponent={opponent}/>\n        )\n    }\n}","/Users/donnie/code/parledger/src/components/PulseSpinner.js",[],["135","136"],"/Users/donnie/code/parledger/src/stores/store.js",["137"],"import {computed, createStore, reducer} from 'easy-peasy'\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\nimport 'firebase/analytics'\nimport 'firebase/storage'\nimport {firebaseReducer, getFirebase} from 'react-redux-firebase'\nimport {createFirestoreInstance, firestoreReducer, getFirestore} from 'redux-firestore'\nimport {wagersModel} from \"./wagers\"; // <- needed if using firestore\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst prodFirebaseConfig = {\n    apiKey: \"AIzaSyDgBRkq0CxmKYpyO2_kBaqz13z2ZTzaOOU\",\n    authDomain: \"parledger-app.firebaseapp.com\",\n    databaseURL: \"https://parledger-app.firebaseio.com\",\n    projectId: \"parledger-app\",\n    storageBucket: \"parledger-app.appspot.com\",\n    messagingSenderId: \"955423843573\",\n    appId: \"1:955423843573:web:f9a7b0ba602c84c86951bc\",\n    measurementId: \"G-2CVGGBD2MH\"\n};\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst devFirebaseConfig = {\n    apiKey: \"AIzaSyCL_K2UDJmOpbwxYu2S6ySvEP8TJbltlk8\",\n    authDomain: \"ledgerdotbet-dev.firebaseapp.com\",\n    projectId: \"ledgerdotbet-dev\",\n    storageBucket: \"ledgerdotbet-dev.appspot.com\",\n    messagingSenderId: \"812605505064\",\n    appId: \"1:812605505064:web:0de526f3d351bdc77f3f1d\",\n    measurementId: \"G-4BMDL21TP0\"\n};\n\nconsole.log(`Built with env ${process.env.REACT_APP_FIREBASE_PROJECT}`)\nconst firebaseConfig = process.env.REACT_APP_FIREBASE_PROJECT === 'prod' ? prodFirebaseConfig : devFirebaseConfig;\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    profileFactory: (userData) => { // how profiles are stored in database\n        return {\n            uid: userData.uid,\n            email: userData.email,\n            avatarUrl: userData.photoURL || null,\n            displayName: userData.displayName,\n        }\n    }\n}\n\n// Initialize firebase instance\nfirebase.initializeApp(firebaseConfig)\n\n// Initialize other services on firebase instance\nfirebase.firestore() // <- needed if using firestore\nfirebase.functions() // <- needed if using httpsCallable\nfirebase.analytics();\n\nif (window.location.hostname === 'localhost') {\n    console.log(\"testing locally -- hitting local functions and firestore emulators\");\n    firebase.functions().useEmulator('localhost', 5001);\n    firebase.firestore().settings({\n        host: 'localhost:8080',\n        ssl: false\n    });\n}\n\n\n\nexport const store = createStore({\n    firestore: reducer(firestoreReducer),\n    firebase: reducer(firebaseReducer),\n    wagers: wagersModel,\n}, {injections: {getFirestore, getFirebase}});\n\nexport const reactReduxFirebaseProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n}","/Users/donnie/code/parledger/src/stores/wagers.js",[],"/Users/donnie/code/parledger/src/components/SelectOpponent.js",["138","139"],"import {useState} from \"react\";\nimport algoliasearch from 'algoliasearch';\nimport {Hits} from 'react-instantsearch-dom';\nimport styled from 'styled-components';\n\n// Include only the reset\nimport 'instantsearch.css/themes/reset.css';\n// or include the full Algolia theme\nimport 'instantsearch.css/themes/algolia.css';\nimport Avatar from \"react-avatar\";\nimport {useStoreState} from \"easy-peasy\";\nimport {useFirestoreConnect} from \"react-redux-firebase\";\n\n\nconst searchClient = algoliasearch(\n    'AT9T4ZSHO4',\n    'e61e275ce3dea2bcb7f1a7249eb3bbcb'\n);\n\nconst HitsContainer = styled.div`\n\n  //background: white;\n  //box-shadow: 3px 3px 25px #0000001C;\n  //margin-top: 0.5em;\n  //border-radius: 0.3em;\n`\n\nconst HitContainer = styled.div`\n  color: #0F2027;\n  text-align: center;\n  padding: 0.3em;\n\n  background: white;\n  box-shadow: 3px 3px 25px #0000001C;\n  margin-top: 0.5em;\n  border-radius: 0.3em;\n\n  display: flex;\n  justify-content: start;\n  align-items: center;\n\n  :hover {\n    background: #f2f2f2;\n    cursor: pointer;\n  }\n`\n\nconst HitContainerSpan = styled.span`\n  padding-left: 1em;\n  font-size: 1.17em;\n`\n\nconst Hit = ({hit, opponentSelected}) => {\n    return (\n        <HitContainer onClick={() => opponentSelected(hit)}>\n            <HitContainerSpan>{hit.avatarUrl\n                ? <Avatar size={40} round={true} src={hit.avatarUrl}/>\n                : <Avatar size={40} round={true} name={hit.displayName}/>\n            }\n            </HitContainerSpan>\n            <HitContainerSpan>\n                {hit.displayName}\n            </HitContainerSpan>\n        </HitContainer>\n    )\n}\n\nconst SearchContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst SearchRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledSearchBox = styled.input`\n  font-size: 1.17em;\n  padding: 0.3em;\n  box-shadow: 3px 3px 25px #0000001C;\n  border: 0.3em;\n\n  min-height: 40px;\n  background: white;\n  margin-top: 0.5em;\n  border-radius: 0.3em;\n`\n\nconst doFilter = (query) => (member) => {\n    const name = member.displayName?.toLowerCase() ?? \"\";\n    const email = member.email?.toLowerCase() ?? \"\";\n    const normalizedQuery = query.toLowerCase();\n\n    return name.includes(normalizedQuery) || email.includes(normalizedQuery);\n}\n\nexport const SelectOpponent = ({opponentSelected}) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const profile = useStoreState(state => state.firebase.profile);\n    const auth = useStoreState(state => state.firebase.auth);\n    useFirestoreConnect(profile.groups.map(group => ({collection: `groups/${group}/users`, storeAs: 'groupMembers'})));\n    const members = useStoreState(state => state.firestore.data.groupMembers);\n    const filteredMembers = Object.values(members ?? {}).filter(it => it.uid !== auth.uid).filter(doFilter(searchQuery));\n\n\n    return (\n        <div>\n            <SearchContainer>\n                <SearchRow>\n                    <h2>\n                        Propose a bet to\n                    </h2>\n\n                    <StyledSearchBox\n                        onSubmit={event => {\n                            event.preventDefault();\n                            console.log(event.currentTarget);\n                        }}\n                        placeholder=\"Search for a user\"\n                        onChange={e => setSearchQuery(e.target.value)}\n                    />\n                </SearchRow>\n                <HitsContainer>\n                    {filteredMembers?.map(member => <Hit key={member.uid} hit={member} opponentSelected={opponentSelected}/>)}\n                </HitsContainer>\n            </SearchContainer>\n        </div>\n    )\n}","/Users/donnie/code/parledger/src/components/SelectEvent.js",["140","141","142","143"],"import {useStoreState} from \"easy-peasy\";\nimport React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {SportSelect} from \"./SportSelect\";\n\nconst OutcomeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nconst OddsContainer = styled.div`\n  font-family: Monaco, SFMono-Regular, monospace;\n`\n\nexport const Outcome = ({outcome}) => {\n    if (outcome) {\n        return (\n            <OutcomeContainer>\n                {outcome.price.handicap && <OddsContainer>\n                    {['O', 'U'].includes(outcome.type) && outcome.type} {outcome.price.handicap + ' '}\n                </OddsContainer>}\n            </OutcomeContainer>\n        )\n    } else {\n        return <span/>\n    }\n}\n\nconst MarketDescription = styled.div`\n  border-bottom: 1px solid white;\n  margin-bottom: 1em;\n`\n\nconst EventMarket = ({market}) => {\n    return (\n        <div>\n            <MarketDescription>{market.description}</MarketDescription>\n            {market.outcomes.map(it => <Outcome outcome={it}/>)}\n        </div>\n    )\n};\n\nconst MarketContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n\n  margin-top: 1em;\n`\n\nconst EventHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nexport const EventCell = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr 1fr 2fr;\n  background: linear-gradient(to bottom, #FFFFFF04, #FFFFFF09);\n  box-shadow: 3px 3px 25px #0000001C;\n  border-radius: 0.3em;\n  max-width: 800px;\n  margin: 1em auto;\n`\n\nexport const TitleCell = styled(EventCell)`\n  background: transparent;\n  box-shadow: none;\n`\n\nconst TimeAndDateCell = styled.div`\n  grid-column: 1;\n  grid-row: span 2;\n\n  padding: 1em;\n\n  display: flex;\n  flex-direction: column;\n\n  background: linear-gradient(to bottom, #FFFFFF14, #FFFFFF19);\n`\n\nconst OddsCell = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0.5em;\n`\n\nconst SelectableOddsCellContainer = styled(OddsCell)`\n  color: ${props => {\n    if (props.selected) {\n      return '#00C781';\n    } else if (props.opponent) {\n      return '#FF4040';\n    } else {\n      return 'inherit'\n    }\n  }};\n  display: flex;\n  flex-wrap: wrap-reverse;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n\n  :hover {\n    cursor: pointer;\n    background: #FFFFFF13;\n  }\n`\n\nconst SelectableOddsCell = ({eventSelected, event, market, outcome, selected, opponent}) => {\n    return (\n        <SelectableOddsCellContainer selected={selected} opponent={opponent}\n                                     onClick={() => eventSelected({event, market, outcome})}>\n            <Outcome outcome={event?.displayGroups[0]?.markets[market]?.outcomes[outcome]}/>\n        </SelectableOddsCellContainer>\n    )\n}\n\nconst SectionNameCell = styled.div`\n  color: white;\n  grid-column-start: 1;\n  grid-column-end: 5;\n`\n\nexport const TitleRow = ({name}) => {\n    return (\n        <TitleCell>\n            <SectionNameCell>\n                <h2>{name}</h2>\n            </SectionNameCell>\n            <div/>\n            <div/>\n            <OddsCell>\n                Spread\n            </OddsCell>\n            <OddsCell>\n                Total\n            </OddsCell>\n        </TitleCell>\n    )\n}\n\nconst EventHeaderContainer = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 5;\n`\n\nconst NotesRow = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 5;\n\n  border-top: 1px solid white;\n  font-size: smaller;\n  padding: 0.5em;\n`\n\nconst SportSection = ({section, eventSelected}) => {\n    return (\n        <div>\n            <TitleRow name={section.path[0].description}/>\n            {section.events.map(it => <Event eventSelected={eventSelected} event={it}/>)}\n        </div>\n    )\n}\n\nconst OutcomesRow = ({event, wagerMembers, selectedOutcome, selectedMarket, eventSelected, rowNum}) => {\n    const auth = useStoreState(state => state.firebase.auth);\n    if (!!wagerMembers) {\n        const selected = wagerMembers[rowNum].uid === auth.uid;\n        const opponent = wagerMembers[(rowNum + 1) % 2].uid === auth.uid;\n        return (\n            <React.Fragment>\n                <SelectableOddsCellContainer selected={selected} opponent={opponent}>\n                    {wagerMembers[rowNum].displayName}\n                </SelectableOddsCellContainer>\n                <SelectableOddsCell selected={selected} opponent={opponent} event={event} market={selectedMarket}\n                                    outcome={rowNum}/>\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment>\n                <SelectableOddsCell\n                    eventSelected={eventSelected}\n                    event={event} market={0} outcome={rowNum}/>\n                <SelectableOddsCell\n                    eventSelected={eventSelected}\n                    event={event} market={2} outcome={rowNum}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport const Event = (props) => {\n    const {headerComponent, footerComponent, event} = props;\n    const eventTime = new Date(event.startTime);\n    return (\n        <EventCell key={event.id}>\n            {headerComponent && <EventHeaderContainer>{headerComponent}</EventHeaderContainer>}\n            <TimeAndDateCell>\n                <div>{eventTime.toLocaleDateString()}</div>\n                <div>{eventTime.toLocaleTimeString()}</div>\n            </TimeAndDateCell>\n            <OddsCell>\n                {event.competitors[0]?.name}\n            </OddsCell>\n            <OutcomesRow {...props} rowNum={0}/>\n            <OddsCell>\n                {event.competitors[1]?.name}\n            </OddsCell>\n            <OutcomesRow {...props} rowNum={1}/>\n            {event.notes && <NotesRow>\n                {event.notes}\n            </NotesRow>}\n            {footerComponent && <EventHeaderContainer> {footerComponent} </EventHeaderContainer>}\n        </EventCell>\n    )\n};\n\n\nexport const SelectEvent = ({eventSelected}) => {\n    const events = useStoreState(state => state.wagers.headToHeadEvents);\n    const [numSections, setNumSections] = useState(2);\n    const renderedEvents = events.slice(0, numSections)\n    const fetchMoreData = () => setNumSections(numSections + 1)\n\n    return (\n        <React.Fragment>\n            <InfiniteScroll\n                dataLength={renderedEvents.length}\n                next={fetchMoreData}\n                hasMore={renderedEvents.length !== events.length}\n                loader={<h4>Loading...</h4>}\n                endMessage={\n                    <p style={{textAlign: \"center\"}}>\n                        <b>Huh, that's it.</b>\n                    </p>\n                }\n            >\n                {renderedEvents.map(section => <SportSection key={section.id} eventSelected={eventSelected}\n                                                             section={section}/>)}\n            </InfiniteScroll>\n        </React.Fragment>\n    )\n}","/Users/donnie/code/parledger/src/components/SportSelect.js",["144","145"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst sports = {\n    1: \"Football\",\n    215: \"Cricket\",\n    226: \"Baseball\",\n    227: \"Basketball\",\n    237: \"Golf\",\n    238: \"Boxing\",\n    239: \"Tennis\",\n    240: \"Soccer\",\n    1100: \"Handball\",\n    1200: \"Volleyball\",\n    1201: \"UFC/MMA\",\n    1203: \"Winter Olympics\",\n    1206: \"Horses Futures & Props\",\n    1250: \"Beach Volleyball\",\n    1600: \"Futsal\",\n    1900: \"Table Tennis\",\n    2100: \"Hockey\",\n    2700: \"Cycling\",\n    2900: \"Winter Sports\",\n    6000: \"Esports\",\n    7000: \"Numbers Game\",\n    22877: \"Rugby Union\",\n    22878: \"Rugby League\",\n    22881: \"Motor Sports\",\n    22883: \"Other Sports\",\n    22884: \"Snooker\",\n    22886: \"Darts\",\n    22888: \"Politics\"\n}\n\nconst SportIcon = styled.span`\n  font-size: 4em;\n`\n\nconst SportSelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nexport const SportSelect = ({}) => {\n    return (\n        <SportSelectContainer>\n            <SportIcon>\n                🏈\n            </SportIcon>\n            <SportIcon>\n                🏀\n            </SportIcon>\n            <SportIcon>\n                ⚾️\n            </SportIcon>\n            <SportIcon>\n                🏉\n            </SportIcon>\n        </SportSelectContainer>\n    )\n}","/Users/donnie/code/parledger/src/components/ConfirmWager.js",["146","147","148","149","150","151"],"import {Event, Outcome, TitleRow} from \"./SelectEvent\";\nimport React, {useState} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\n\nconst OutcomeDescription = ({outcome}) => {\n    console.log(outcome);\n    if (outcome) {\n        return (\n            <span>\n                {outcome.description}\n                {outcome.price.handicap && <span>\n                    {' ' + outcome.price.handicap + ' '}\n                </span>}\n                {!outcome.price.handicap && <span>\n                    {' ' + outcome.price.american + ' '}\n                </span>}\n            </span>\n        )\n    } else {\n        return <span/>\n    }\n}\n\nconst EventDescription = ({event, market, outcome}) => {\n    const selectedMarket = event.displayGroups[0].markets[market];\n    const selectedOutcome = selectedMarket.outcomes[outcome];\n    const eventTime = new Date(event.startTime)\n    return (\n        <div>\n            <div> For {event.description} on {eventTime.toLocaleDateString()} at {eventTime.toLocaleTimeString()}</div>\n            <div>you picked <OutcomeDescription outcome={selectedOutcome}/> in a {selectedMarket.description} bet.</div>\n        </div>\n    )\n};\n\nconst BetAmountButton = styled.button`\n  border-radius: 0.3em;\n  color: white;\n  font-size: 1.2em;\n  padding: 0.3em;\n  border: 1px solid white;\n  background: none;\n\n  width: 100px;\n  margin: 1em;\n\n  :hover {\n    cursor: pointer;\n    background: #FFFFFF13;\n  }\n`\n\nconst BetAmountRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\n\nconst ErrorMessage = styled.div`\n  color: #FF4040;\n`\n\nconst SuccessMessage = styled.div`\n  color: #00C781;\n`\n\nexport const ConfirmWager = ({selection, opponent}) => {\n    const {handleSubmit, control, errors, register} = useForm();\n    const profile = useStoreState(state => state.firebase.profile);\n    const createWager = useStoreActions(actions => actions.wagers.createWager);\n    const [apiError, setApiError] = useState(null);\n    const [apiSuccess, setApiSuccess] = useState(null);\n\n    const saveWager = async (betAmount) => {\n        const wager = {\n            proposedTo: opponent.uid,\n            groupId: profile.groups[0],\n            type: 'BOVADA',\n            details: {\n                selection,\n                risk: betAmount,\n                win: betAmount\n            }\n        }\n\n        try {\n            await createWager(wager);\n            setApiSuccess(\"Wager was proposed!\")\n        } catch (error) {\n            setApiError(error.message);\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                Confirm your proposed bet with {opponent.displayName}\n            </div>\n            <TitleRow name={selection.event.description}/>\n            <Event eventSelected={() => {\n            }} event={selection.event} selectedMarket={selection.market} selectedOutcome={selection.outcome}/>\n            {apiSuccess\n                ? <SuccessMessage>{apiSuccess}</SuccessMessage>\n                : <div>\n                    How much to bet?\n                    <BetAmountRow>\n                        {[10, 20, 50, 100].map(it => <BetAmountButton\n                            onClick={() => saveWager(it)}>${it}</BetAmountButton>)}\n                    </BetAmountRow>\n                </div>}\n            {apiError && <ErrorMessage>\n                {apiError}\n            </ErrorMessage>}\n        </div>\n    )\n}","/Users/donnie/code/parledger/src/components/SplashScreen.js",[],"/Users/donnie/code/parledger/src/components/PersonalWagers.js",["152","153","154"],"import {useStoreActions, useStoreState} from \"easy-peasy\";\nimport {Event} from \"./SelectEvent\";\nimport styled from 'styled-components';\nimport {buttonCss, InlineLink} from \"../styles\";\nimport {useState, useEffect} from \"react\";\nimport {useFirestoreConnect} from \"react-redux-firebase\";\nimport {Link} from \"react-router-dom\";\n\nconst WagerDescriptionRowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0.5em;\n\n  font-size: 1em;\n  border-radius: 0.3em 0.3em 0 0;\n  background: white;\n  color: #0F2027;\n`\n\nconst WagerDescriptionText = styled.div`\n\n`\n\nconst WagerAmountContainer = styled.div`\n`\n\nconst WagerAmount = ({risk, toWin}) => {\n    if (toWin) {\n\n    } else {\n        return (\n            <WagerAmountContainer>\n                ${risk}\n            </WagerAmountContainer>\n        );\n    }\n}\n\nconst WagerDescriptionRow = ({eventDescription, pending, risk, toWin, wager}) => {\n    return (<WagerDescriptionRowContainer>\n            <WagerDescriptionText>\n                {pending\n                    ? <span>\n                    <i title=\"This wager is pending\" className=\"fas fa-user-clock\"/>\n                        {'  '}\n                </span>\n                    : <span>\n                        <i title=\"This wager was confirmed\" className=\"fas fa-check-circle\"/>\n                        {'  '}\n                    </span>}\n\n                {eventDescription}\n            </WagerDescriptionText>\n            <WagerMembers wager={wager}/>\n            <WagerAmount risk={risk} toWin={toWin}/>\n        </WagerDescriptionRowContainer>\n    );\n}\n\n\nconst ConfirmButton = styled.button`\n  ${buttonCss};\n  background: #3cc921;\n\n  :hover {\n    background: #3cc921cF;\n  }\n`\n\nconst RejectButton = styled.button`\n  ${buttonCss};\n  background: #FF4040;\n\n  :hover {\n    background: #FF4040cF;\n    cursor: pointer;\n  }\n`\n\nconst WagerActionsGroup = styled.div`\n  text-align: end;\n`\n\nconst ConfirmWagerContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  border-radius: 0 0 0.3em 0.3em;\n  background: white;\n  color: #0F2027;\n`\n\nconst ConfirmWagerText = styled.span`\n  margin: 1em;\n`\n\nconst WagerMembersContainer = styled.span`\n  display: flex;\n  padding: 0 0.3em;\n  justify-content: center;\n  align-items: center;\n`\n\nconst WagerMembers = ({wager}) => {\n    const auth = useStoreState(state => state.firebase.auth);\n    const proposedBy = wager.proposedBy.uid === auth.uid ? \"You\" : wager.proposedBy.displayName;\n    const proposedTo = wager.proposedTo.uid === auth.uid ? \"You\" : wager.proposedTo.displayName;\n\n    return (\n        <WagerMembersContainer>\n            {proposedBy} vs. {proposedTo}\n        </WagerMembersContainer>\n    )\n}\n\nconst ConfirmWagerRow = ({onConfirm, wager}) => {\n    const auth = useStoreState(state => state.firebase.auth);\n    const [loading, setLoading] = useState(false);\n\n    const confirm = (accept) => async () => {\n        console.log('acting')\n        setLoading(true);\n        try {\n            await onConfirm(wager.id, wager.groupId, accept);\n        } catch (e) {\n            console.error(e);\n        }\n        setLoading(false);\n    }\n\n    if (loading) {\n        return (\n            <ConfirmWagerContainer>\n                Loading ...\n            </ConfirmWagerContainer>\n        )\n    } else if (wager.status === 'pending' && wager.proposedTo.uid === auth.uid) {\n        return (\n            <ConfirmWagerContainer>\n                <ConfirmWagerText>\n                    <i className=\"fas fa-exclamation-circle\"/> {wager.proposedBy.displayName} proposed this bet to you.\n                </ConfirmWagerText>\n                <WagerActionsGroup>\n                    <ConfirmButton onClick={confirm(true)}>\n                        Confirm it\n                    </ConfirmButton>\n                    <RejectButton onClick={confirm(false)}>\n                        Reject it\n                    </RejectButton>\n                </WagerActionsGroup>\n            </ConfirmWagerContainer>\n        )\n    } else if (wager.status === 'pending' && wager.proposedBy.uid === auth.uid) {\n        return (\n            <ConfirmWagerContainer>\n                <ConfirmWagerText> <i className=\"fas fa-exclamation-circle\"/> You proposed this bet\n                    to {wager.proposedTo.displayName} </ConfirmWagerText>\n                <WagerActionsGroup>\n                    <RejectButton onClick={confirm(false)}>\n                        Rescind it\n                    </RejectButton>\n                </WagerActionsGroup>\n            </ConfirmWagerContainer>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst membersFromWager = (wager) => {\n    return {\n        [wager.details.selection.outcome]: wager.proposedBy,\n        [(wager.details.selection.outcome + 1) % 2]: wager.proposedTo\n    }\n}\n\nconst Wager = (props) => {\n    const {wager} = props;\n    if (wager.type === 'BOVADA') {\n        const selection = wager.details.selection;\n        return <Event\n            wagerMembers={membersFromWager(wager)}\n            eventSelected={() => {\n            }}\n            headerComponent={\n                <WagerDescriptionRow\n                    wager={wager}\n                    pending={wager.status === 'pending'}\n                    eventDescription={selection.event.description}\n                    risk={wager.details.risk}/>\n            }\n            footerComponent={<ConfirmWagerRow {...props} />}\n            event={selection.event}\n            selectedMarket={selection.market}\n            selectedOutcome={selection.outcome}\n        />\n    }\n}\n\nconst PersonalWagersTitle = styled.div`\n  max-width: 800px;\n  margin: 1em auto;\n`\n\nexport const PersonalWagers = ({}) => {\n    const profile = useStoreState(state => state.firebase.profile);\n    const confirmWagerAction = useStoreActions(actions => actions.wagers.respondToWager);\n    const wagers = Object.values(profile?.wagers ?? {}).filter(wager => wager.status !== 'rejected');\n    const confirmWager = async (wagerId, groupId, acceptWager) => {\n        await confirmWagerAction({wagerId, groupId, accept: acceptWager})\n    };\n\n    return (\n        <div>\n            <PersonalWagersTitle>\n                <h3>\n                    Your Wagers\n                </h3>\n            </PersonalWagersTitle>\n            {wagers.length > 0\n                ? wagers.map(wager => <Wager onConfirm={confirmWager} wager={wager}/>)\n                : <PersonalWagersTitle>\n                    You haven't made any wagers yet, maybe you should <InlineLink to={'/wagers/new'}>propose one </InlineLink>\n                </PersonalWagersTitle>\n            }\n        </div>\n    )\n}\n\nexport const useGroupWagers = () => {\n    const profile = useStoreState(state => state.firebase.profile);\n    useFirestoreConnect(profile?.groups?.map(g => ({collection: `groups/${g}/wagers`, storeAs: 'wagers'})));\n    const loadGroupWagers = useStoreActions(actions => actions.wagers.loadGroupWagers);\n    useEffect(() => {\n        loadGroupWagers()?.catch(console.error);\n    }, [loadGroupWagers])\n    return useStoreState(state => state.wagers.groupWagers);\n}\n\nexport const GroupWagers = ({}) => {\n    useFirestoreConnect([{collectionGroup: \"wagers\"}]);\n    const auth = useStoreState(state => state.firebase.auth)\n    const rawWagers = useStoreState(state => state.firestore.data.wagers)\n    const wagers = Object.values(rawWagers ?? {})\n        .filter(wager => wager.status !== 'rejected')\n        .filter(wager => wager.proposedTo.uid !== auth.uid && wager.proposedBy.uid !== auth.uid)\n\n    if (wagers.length > 0) {\n        return (\n            <div>\n                <PersonalWagersTitle>\n                    <h3>\n                        Group Wagers\n                    </h3>\n                </PersonalWagersTitle>\n                {wagers.map(wager => <Wager wager={wager}/>)}\n            </div>\n        )\n    } else {\n        return null;\n    }\n}","/Users/donnie/code/parledger/src/styles.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":9,"nodeType":"161","messageId":"162","endLine":1,"endColumn":24},{"ruleId":"159","severity":1,"message":"163","line":3,"column":9,"nodeType":"161","messageId":"162","endLine":3,"endColumn":20},{"ruleId":"159","severity":1,"message":"164","line":13,"column":12,"nodeType":"161","messageId":"162","endLine":13,"endColumn":22},{"ruleId":"159","severity":1,"message":"165","line":14,"column":11,"nodeType":"161","messageId":"162","endLine":14,"endColumn":18},{"ruleId":"159","severity":1,"message":"166","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":12},{"ruleId":"159","severity":1,"message":"167","line":27,"column":7,"nodeType":"161","messageId":"162","endLine":27,"endColumn":15},{"ruleId":"159","severity":1,"message":"168","line":61,"column":11,"nodeType":"161","messageId":"162","endLine":61,"endColumn":19},{"ruleId":"159","severity":1,"message":"169","line":6,"column":11,"nodeType":"161","messageId":"162","endLine":6,"endColumn":18},{"ruleId":"155","replacedBy":"170"},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","severity":1,"message":"172","line":1,"column":9,"nodeType":"161","messageId":"162","endLine":1,"endColumn":28},{"ruleId":"159","severity":1,"message":"173","line":2,"column":9,"nodeType":"161","messageId":"162","endLine":2,"endColumn":22},{"ruleId":"159","severity":1,"message":"174","line":3,"column":38,"nodeType":"161","messageId":"162","endLine":3,"endColumn":52},{"ruleId":"159","severity":1,"message":"175","line":9,"column":7,"nodeType":"161","messageId":"162","endLine":9,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":29,"column":11,"nodeType":"178","endLine":29,"endColumn":20,"suggestions":"179"},{"ruleId":"155","replacedBy":"180"},{"ruleId":"157","replacedBy":"181"},{"ruleId":"159","severity":1,"message":"182","line":1,"column":9,"nodeType":"161","messageId":"162","endLine":1,"endColumn":17},{"ruleId":"159","severity":1,"message":"183","line":3,"column":9,"nodeType":"161","messageId":"162","endLine":3,"endColumn":13},{"ruleId":"159","severity":1,"message":"184","line":15,"column":7,"nodeType":"161","messageId":"162","endLine":15,"endColumn":19},{"ruleId":"159","severity":1,"message":"185","line":5,"column":9,"nodeType":"161","messageId":"162","endLine":5,"endColumn":20},{"ruleId":"159","severity":1,"message":"186","line":36,"column":7,"nodeType":"161","messageId":"162","endLine":36,"endColumn":18},{"ruleId":"159","severity":1,"message":"187","line":45,"column":7,"nodeType":"161","messageId":"162","endLine":45,"endColumn":22},{"ruleId":"159","severity":1,"message":"188","line":52,"column":7,"nodeType":"161","messageId":"162","endLine":52,"endColumn":18},{"ruleId":"159","severity":1,"message":"189","line":4,"column":7,"nodeType":"161","messageId":"162","endLine":4,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":45,"column":29,"nodeType":"192","messageId":"193","endLine":45,"endColumn":31},{"ruleId":"159","severity":1,"message":"194","line":1,"column":16,"nodeType":"161","messageId":"162","endLine":1,"endColumn":23},{"ruleId":"159","severity":1,"message":"195","line":27,"column":7,"nodeType":"161","messageId":"162","endLine":27,"endColumn":23},{"ruleId":"159","severity":1,"message":"196","line":71,"column":12,"nodeType":"161","messageId":"162","endLine":71,"endColumn":24},{"ruleId":"159","severity":1,"message":"197","line":71,"column":26,"nodeType":"161","messageId":"162","endLine":71,"endColumn":33},{"ruleId":"159","severity":1,"message":"198","line":71,"column":35,"nodeType":"161","messageId":"162","endLine":71,"endColumn":41},{"ruleId":"159","severity":1,"message":"199","line":71,"column":43,"nodeType":"161","messageId":"162","endLine":71,"endColumn":51},{"ruleId":"159","severity":1,"message":"200","line":7,"column":9,"nodeType":"161","messageId":"162","endLine":7,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":208,"column":32,"nodeType":"192","messageId":"193","endLine":208,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":243,"column":29,"nodeType":"192","messageId":"193","endLine":243,"endColumn":31},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'useStoreActions' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'authLoaded' is assigned a value but never used.","'history' is assigned a value but never used.","'blob' is defined but never used.","'imageCss' is assigned a value but never used.","'firebase' is assigned a value but never used.","'profile' is assigned a value but never used.",["201"],["202"],"'useFirestoreConnect' is defined but never used.","'useStoreState' is defined but never used.","'useGroupWagers' is defined but never used.","'CreateGroupFormContainer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateEvents'. Either include it or remove the dependency array.","ArrayExpression",["203"],["201"],["202"],"'computed' is defined but never used.","'Hits' is defined but never used.","'searchClient' is assigned a value but never used.","'SportSelect' is defined but never used.","'EventMarket' is assigned a value but never used.","'MarketContainer' is assigned a value but never used.","'EventHeader' is assigned a value but never used.","'sports' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Outcome' is defined but never used.","'EventDescription' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'control' is assigned a value but never used.","'errors' is assigned a value but never used.","'register' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},"Update the dependencies array to be: [profile, updateEvents]",{"range":"206","text":"207"},[961,970],"[profile, updateEvents]"]