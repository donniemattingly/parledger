[{"/Users/donnie/code/parledger/src/index.js":"1","/Users/donnie/code/parledger/src/App.js":"2","/Users/donnie/code/parledger/src/reportWebVitals.js":"3","/Users/donnie/code/parledger/src/TestComponent.js":"4","/Users/donnie/code/parledger/src/pages/LoginPage.js":"5","/Users/donnie/code/parledger/src/theme.js":"6","/Users/donnie/code/parledger/src/components/AppContainer.js":"7","/Users/donnie/code/parledger/src/pages/SignUpPage.js":"8","/Users/donnie/code/parledger/src/pages/UserInfoPage.js":"9","/Users/donnie/code/parledger/src/components/PrivateRoute.js":"10","/Users/donnie/code/parledger/src/components/Home.js":"11","/Users/donnie/code/parledger/src/pages/HomePage.js":"12","/Users/donnie/code/parledger/src/components/Feed.js":"13","/Users/donnie/code/parledger/src/pages/JoinGroupPage.js":"14","/Users/donnie/code/parledger/src/pages/NewWagerPage.js":"15","/Users/donnie/code/parledger/src/components/PulseSpinner.js":"16","/Users/donnie/code/parledger/src/stores/store.js":"17","/Users/donnie/code/parledger/src/stores/wagers.js":"18","/Users/donnie/code/parledger/src/components/SelectOpponent.js":"19","/Users/donnie/code/parledger/src/components/SelectEvent.js":"20","/Users/donnie/code/parledger/src/components/SportSelect.js":"21","/Users/donnie/code/parledger/src/components/ConfirmWager.js":"22","/Users/donnie/code/parledger/src/components/SplashScreen.js":"23","/Users/donnie/code/parledger/src/components/PersonalWagers.js":"24"},{"size":500,"mtime":1608599661043,"results":"25","hashOfConfig":"26"},{"size":3072,"mtime":1609430684566,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1608165066404,"results":"28","hashOfConfig":"26"},{"size":417,"mtime":1608171558541,"results":"29","hashOfConfig":"26"},{"size":1712,"mtime":1609429976129,"results":"30","hashOfConfig":"26"},{"size":2581,"mtime":1609162633781,"results":"31","hashOfConfig":"26"},{"size":2280,"mtime":1609434577487,"results":"32","hashOfConfig":"26"},{"size":1760,"mtime":1609426281464,"results":"33","hashOfConfig":"26"},{"size":391,"mtime":1609428021132,"results":"34","hashOfConfig":"26"},{"size":1475,"mtime":1609430328630,"results":"35","hashOfConfig":"26"},{"size":215,"mtime":1608222572390,"results":"36","hashOfConfig":"26"},{"size":110,"mtime":1608602463336,"results":"37","hashOfConfig":"26"},{"size":529,"mtime":1609434529173,"results":"38","hashOfConfig":"26"},{"size":3495,"mtime":1609262551129,"results":"39","hashOfConfig":"26"},{"size":3547,"mtime":1609380199650,"results":"40","hashOfConfig":"26"},{"size":709,"mtime":1609261303486,"results":"41","hashOfConfig":"26"},{"size":2700,"mtime":1609449360977,"results":"42","hashOfConfig":"26"},{"size":1970,"mtime":1609377856607,"results":"43","hashOfConfig":"26"},{"size":3922,"mtime":1609449559513,"results":"44","hashOfConfig":"26"},{"size":6505,"mtime":1609446682414,"results":"45","hashOfConfig":"26"},{"size":1311,"mtime":1609368196301,"results":"46","hashOfConfig":"26"},{"size":3482,"mtime":1609434343479,"results":"47","hashOfConfig":"26"},{"size":775,"mtime":1609430608821,"results":"48","hashOfConfig":"26"},{"size":425,"mtime":1609434504345,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1j8il7e",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},"/Users/donnie/code/parledger/src/index.js",[],["109","110"],"/Users/donnie/code/parledger/src/App.js",[],"/Users/donnie/code/parledger/src/reportWebVitals.js",[],"/Users/donnie/code/parledger/src/TestComponent.js",["111","112"],"/Users/donnie/code/parledger/src/pages/LoginPage.js",["113","114"],"import {isLoaded, isEmpty, useFirebase} from \"react-redux-firebase\";\nimport {useStoreState} from \"easy-peasy\";\nimport {Redirect, useHistory} from 'react-router-dom';\nimport {StyledFirebaseAuth} from \"react-firebaseui\";\nimport {JoinGroupPage} from \"./JoinGroupPage\";\nimport React, {useState} from \"react\";\n\n// Configure FirebaseUI.\n\nexport function LoginPage({signup}) {\n    const firebase = useFirebase()\n    const auth = useStoreState(state => state.firebase.auth)\n    const [authLoaded, setAuthLoaded] = useState(false);\n    const history = useHistory();\n    const uiConfig = {\n        // Popup signin flow rather than redirect flow.\n        signInFlow: 'popup',\n        // We will display Google and Facebook as auth providers.\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\n        ],\n        callbacks: {\n            signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n                firebase.handleRedirectResult(authResult).then(() => {\n                    console.log('logged in');\n                    setAuthLoaded(true);\n                });\n                return false;\n            },\n        },\n    };\n\n    return (\n        <div>\n            <div>\n                {\n                    !isLoaded(auth)\n                        ? <span>Loading...</span>\n                        : isEmpty(auth)\n                        ? <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n                        : signup\n                            ? <JoinGroupPage/>\n                            : <Redirect to={{pathname: \"/home\",}}/>\n                }\n            </div>\n        </div>\n    )\n}\n","/Users/donnie/code/parledger/src/theme.js",[],"/Users/donnie/code/parledger/src/components/AppContainer.js",[],"/Users/donnie/code/parledger/src/pages/SignUpPage.js",["115","116","117","118"],"import \"./HomePage.css\";\nimport React from \"react\";\nimport {useFirebase} from \"react-redux-firebase\";\nimport signUpImage from \"../resources/undraw_Savings_re_eq4w.svg\"\nimport blob from \"../resources/blob_white.svg\"\nimport styled, {css} from 'styled-components';\nimport {useHistory} from 'react-router-dom';\n\nconst SignUpPageContainer = styled.div`\n  display: grid;\n  height: 100vh;\n  grid-template-columns: 1fr 1fr;\n  \n  max-width: 1000px;\n  margin: auto;\n\n  @media (max-width: 600px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst CtaContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst imageCss = css`\n  position: absolute;\n  width: 50%;\n  top: 10em;\n  right: 1em;\n`\n\nconst SignUpPageImageContainer = styled.div`\n  padding-left: 1em;\n  place-self: center center;\n  height: 100%;\n`\n\nconst SignUpPageImage = styled.img`\n  width: 100%;\n`\n\nconst SignUpButton = styled.button`\n  border-radius: 0.3em;\n  color: white;\n  font-size: 1.2em;\n  padding: 0.3em;\n  border: 1px solid white;\n  background: none;\n  \n  max-width: 200px;\n\n  :hover {\n    cursor: pointer;\n    background: #FFFFFF13;\n  }\n`\n\nexport const SignUpPage = () => {\n    const firebase = useFirebase()\n    const history = useHistory();\n\n    async function loginWithGoogle() {\n        history.push('/signup')\n    }\n\n    return (\n        <SignUpPageContainer>\n\n            <CtaContainer>\n                <h1>ledger.bet</h1>\n                <h3>\n                    make friendly bets\n                </h3>\n                <SignUpButton onClick={loginWithGoogle}>Sign Up</SignUpButton>\n            </CtaContainer>\n            <SignUpPageImageContainer>\n                <SignUpPageImage src={signUpImage}/>\n            </SignUpPageImageContainer>\n        </SignUpPageContainer>\n    )\n}","/Users/donnie/code/parledger/src/pages/UserInfoPage.js",["119"],"import {useStoreState} from \"easy-peasy\";\nimport {useFirestoreConnect} from \"react-redux-firebase\";\n\nexport const UserInfoPage = () => {\n    useFirestoreConnect([{collectionGroup: \"wagers\"}]);\n    const profile = useStoreState(state => state.firebase.profile)\n    const results = useStoreState(state => state.firestore.data.wagers)\n\n    return <pre>{JSON.stringify(profile, null, 2)}</pre>\n}","/Users/donnie/code/parledger/src/components/PrivateRoute.js",[],"/Users/donnie/code/parledger/src/components/Home.js",[],["120","121"],"/Users/donnie/code/parledger/src/pages/HomePage.js",[],"/Users/donnie/code/parledger/src/components/Feed.js",[],"/Users/donnie/code/parledger/src/pages/JoinGroupPage.js",["122"],"import React, {useEffect, useState} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport styled from 'styled-components';\n\nimport {useStoreState} from \"easy-peasy\";\nimport {Link, useParams} from \"react-router-dom\"\nimport {isEmpty, useFirebase} from \"react-redux-firebase\";\n\nconst CreateGroupFormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n`\n\nexport const AocSubmit = styled.input.attrs({type: 'submit'})`\n    background: transparent;\n    border: 0;\n    font-family: inherit;\n    font-size: inherit;\n    margin: 0;\n    padding: 0;\n    color: #009900;\n    cursor: pointer;\n    width: 20em;\n    justify-content: start;\n    text-align: start;\n`\n\nexport const AocInput = styled.input`\n    background: transparent;\n    color: inherit;\n    border: 1px solid #666666;\n    background: #10101a;\n    padding: 0 2px;\n    font-family: inherit;\n    font-size: inherit;\n    margin: 0;\n    width: 20em;\n`\n\nexport const ErrorMessage = styled.span`\n  color: #800000;\n`\n\nexport const JoinGroupPage = ({...props}) => {\n    const [submitting, setSubmiting] = useState();\n    const {register, handleSubmit, errors} = useForm();\n    const [createGroupError, setCreateGroupError] = useState(null);\n    const [createGroupSuccess, setCreateGroupSuccess] = useState(null);\n    const [allowDerivatives] = useState(true);\n    const urlJoinCode = useParams()['joinCode'];\n    const savedJoinCode = useStoreState(state => state.joinCode);\n    const setJoinCode = () => {}\n    const auth = useStoreState(state => state.firebase.auth);\n    const joinCode = urlJoinCode || savedJoinCode || \"\";\n    const firebase = useFirebase();\n\n    useEffect(() =>{\n        if(urlJoinCode){\n            setJoinCode(urlJoinCode);\n        }\n    }, [urlJoinCode])\n\n    const onSubmit = async data => {\n        setSubmiting(true);\n        setCreateGroupError(null);\n        setCreateGroupSuccess(null);\n        try {\n            await firebase.functions().httpsCallable('joinGroup')(\n                {uid: auth.uid, allowDerivatives, ...data}\n            )\n            setCreateGroupSuccess(true);\n        } catch (error) {\n            setCreateGroupError(error.message);\n        }\n        setSubmiting(false);\n    }\n\n    if (isEmpty(auth)) {\n        return <div>\n            <p> You must <Link to={'/login'}>[log in]</Link> to join a group</p>\n        </div>\n    } else {\n\n        return (\n            <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                    <div>\n                        <p>\n                            ledger.bet is invite only. Enter the code for your group to join.\n                        </p>\n                    </div>\n                    <span>\n                        <input name=\"joinCode\" defaultValue={joinCode} ref={register({required: true})}/>\n                        {' '}\n                        {(!submitting && !createGroupSuccess) && <button type='submit' value='Submit'>Submit</button>}\n                        {submitting && <span>submitting</span>}\n                    </span>\n                    {errors.joinCode &&\n                    <ErrorMessage>You must enter the join code </ErrorMessage>}\n                    <br/>\n                    {createGroupError && <ErrorMessage>{createGroupError}</ErrorMessage>}\n                    {createGroupSuccess &&\n                    <span>You joined the group! <Link to={'/groups'}>[View your groups]</Link></span>}\n                </form>\n            </div>\n        )\n    }\n}\n","/Users/donnie/code/parledger/src/pages/NewWagerPage.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import {useStoreActions, useStoreState} from \"easy-peasy\";\nimport {useFirestoreConnect} from \"react-redux-firebase\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {PulseSpinner} from \"../components/PulseSpinner\";\nimport {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {SelectOpponent} from \"../components/SelectOpponent\";\nimport {SelectEvent} from \"../components/SelectEvent\";\nimport React from 'react';\nimport {ConfirmWager} from \"../components/ConfirmWager\";\n\nexport const AppCell = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(to bottom, #FFFFFF04, #FFFFFF09);\n  box-shadow: 3px 3px 25px #0000001C;\n  margin: 1em;\n  padding: 1em;\n  border-radius: 0.3em;\n\n  max-width: 800px;\n  margin: auto;\n`\n\nconst BetAmountRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 1em;\n  width: 100%;\n  justify-content: center;\n`\n\nconst BetAmountSpan = styled.span`\n  margin-left: 2em;\n`\n\nconst SubmitBetButton = styled.button`\n  border-radius: 3em;\n  color: white;\n  font-size: 1.2em;\n  padding: 0.3em;\n  width: 50%;\n  border: 1px solid white;\n  background: none;\n\n  :hover {\n    cursor: pointer;\n    background: #FFFFFF13;\n  }\n`\n\nconst WagerAmountInput = styled.input`\n  font-size: 1em;\n  padding: 0.3em;\n`\n\nconst WagerDescriptionTextArea = styled.textarea`\n  width: 100%;\n  font-size: 1em;\n  font-family: \"Avenir\", sans-serif;\n`\n\nconst OpenWagerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const NewWagerPage = () => {\n    const [submitting, setSubmitting] = useState(false);\n    const profile = useStoreState(state => state.firebase.profile)\n    useFirestoreConnect([{collectionGroup: 'users', storeAs: 'members'}]);\n    const members = useStoreState(state => state.firestore.data.members)\n    const {handleSubmit, control, errors, register} = useForm();\n    const createWager = useStoreActions(actions => actions.wagers.createWager);\n    const updateEvents = useStoreActions(actions => actions.wagers.loadEvents);\n\n    const [opponent, setOpponent] = useState(null)\n    const [event, setEvent] = useState(null);\n\n    useEffect(() => (async () => {\n        await updateEvents().catch(console.error);\n    })(), [profile]);\n\n    const options = Object.keys(members || {}).map(k => members[k])\n    const onSubmit = async (data) => {\n        const wager = {\n            proposedTo: data.uid,\n            groupId: profile.groups[0],\n            details: {\n                description: data.wagerDescription,\n                risk: data.proposedByWagerAmount,\n                win: data.proposedToWagerAmount\n            }\n        }\n        await createWager(wager);\n        setSubmitting(!submitting);\n    }\n\n    const getFormErrorMessage = (errors) => {\n        const messages = {\n            proposedTo: \"Must select someone to propose the bet to\",\n            wagerDescription: \"Must provide a wager description\",\n            proposedByWagerAmount: \"Must enter an amount to risk\",\n            proposedToWagerAmount: \"Must enter an amount to win\",\n        }\n\n        return messages[Object.keys(errors)[0]]\n    }\n\n    if(opponent === null){\n        return (\n            <AppCell>\n                <SelectOpponent opponentSelected={setOpponent}/>\n            </AppCell>\n        )\n    } else if(event === null){\n        return (\n            <SelectEvent eventSelected={setEvent}/>\n        )\n    } else {\n        return (\n            <ConfirmWager selection={event} opponent={opponent}/>\n        )\n    }\n}","/Users/donnie/code/parledger/src/components/PulseSpinner.js",[],"/Users/donnie/code/parledger/src/stores/store.js",["139"],"/Users/donnie/code/parledger/src/stores/wagers.js",[],"/Users/donnie/code/parledger/src/components/SelectOpponent.js",["140","141","142","143","144","145","146","147","148"],"/Users/donnie/code/parledger/src/components/SelectEvent.js",["149","150","151","152"],"import {useStoreState} from \"easy-peasy\";\nimport React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {SportSelect} from \"./SportSelect\";\n\nconst OutcomeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nconst OddsContainer = styled.div`\n  font-family: Monaco, SFMono-Regular, monospace;\n`\n\nexport const Outcome = ({outcome}) => {\n    console.log(outcome)\n    if (outcome) {\n        return (\n            <OutcomeContainer>\n                {outcome.price.handicap && <OddsContainer>\n                    {['O','U'].includes(outcome.type)  && outcome.type} {outcome.price.handicap + ' '}\n                </OddsContainer>}\n            </OutcomeContainer>\n        )\n    } else {\n        return <span/>\n    }\n}\n\nconst MarketDescription = styled.div`\n  border-bottom: 1px solid white;\n  margin-bottom: 1em;\n`\n\nconst EventMarket = ({market}) => {\n    return (\n        <div>\n            <MarketDescription>{market.description}</MarketDescription>\n            {market.outcomes.map(it => <Outcome outcome={it}/>)}\n        </div>\n    )\n};\n\nconst MarketContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n\n  margin-top: 1em;\n`\n\nconst EventHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nexport const EventCell = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr 1fr 2fr;\n  background: linear-gradient(to bottom, #FFFFFF04, #FFFFFF09);\n  box-shadow: 3px 3px 25px #0000001C;\n  border-radius: 0.3em;\n  max-width: 800px;\n  margin: 1em auto;\n`\n\nexport const TitleCell = styled(EventCell)`\n  background: transparent;\n  box-shadow: none;\n`\n\nconst TimeAndDateCell = styled.div`\n  grid-column: 1;\n  grid-row-start: 1;\n  grid-row-end: 3;\n\n  padding: 1em;\n\n  display: flex;\n  flex-direction: column;\n\n  background: linear-gradient(to bottom, #FFFFFF14, #FFFFFF19);\n`\n\nconst OddsCell = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0.5em;\n`\n\nconst SelectableOddsCellContainer = styled(OddsCell)`\n  color: ${props => {\n    if (props.selected) {\n      return '#00C781';\n    } else if (props.opponent) {\n      return '#FF4040';\n    } else {\n      return 'inherit'\n    }\n  }};\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n\n  :hover {\n    cursor: pointer;\n    background: #FFFFFF13;\n  }\n`\n\nconst SelectableOddsCell = ({eventSelected, event, market, outcome, selectedMarket, selectedOutcome}) => {\n    const opponent = selectedMarket === market && selectedOutcome !== outcome;\n    const selected = selectedMarket === market && selectedOutcome === outcome;\n    return (\n        <SelectableOddsCellContainer selected={selected} opponent={opponent} onClick={() => eventSelected({event, market, outcome})}>\n            <Outcome outcome={event?.displayGroups[0]?.markets[market]?.outcomes[outcome]}/> {selected && \"You: \"} {opponent && \"Them: \"}\n        </SelectableOddsCellContainer>\n    )\n}\n\nconst SectionNameCell = styled.div`\n  color: white;\n  grid-column-start: 1;\n  grid-column-end: 5;\n`\n\nexport const TitleRow = ({name}) => {\n    return (\n        <TitleCell>\n            <SectionNameCell>\n                <h2>{name}</h2>\n            </SectionNameCell>\n            <div/>\n            <div/>\n            <OddsCell>\n                Spread\n            </OddsCell>\n            <OddsCell>\n                Total\n            </OddsCell>\n        </TitleCell>\n    )\n}\n\nconst NotesRow = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 5;\n\n  border-top: 1px solid white;\n  font-size: smaller;\n  padding: 0.5em;\n`\n\nconst SportSection = ({section, eventSelected}) => {\n    return (\n        <div>\n            <TitleRow name={section.path[0].description}/>\n            {section.events.map(it => <Event eventSelected={eventSelected} event={it}/>)}\n        </div>\n    )\n}\n\nexport const Event = ({event, eventSelected, selectedMarket, selectedOutcome}) => {\n    const eventTime = new Date(event.startTime);\n    return (\n        <EventCell key={event.id}>\n            <TimeAndDateCell>\n                <div>{eventTime.toLocaleDateString()}</div>\n                <div>{eventTime.toLocaleTimeString()}</div>\n            </TimeAndDateCell>\n            <OddsCell>\n                {event.competitors[0]?.name}\n            </OddsCell>\n            <SelectableOddsCell selectedOutcome={selectedOutcome}\n                                selectedMarket={selectedMarket}\n                                eventSelected={eventSelected}\n                                event={event} market={0} outcome={0}/>\n            <SelectableOddsCell selectedOutcome={selectedOutcome}\n                                selectedMarket={selectedMarket} eventSelected={eventSelected}\n                                event={event} market={2} outcome={0}/>\n            <OddsCell>\n                {event.competitors[1]?.name}\n            </OddsCell>\n            <SelectableOddsCell selectedOutcome={selectedOutcome}\n                                selectedMarket={selectedMarket} eventSelected={eventSelected}\n                                event={event} market={0} outcome={1}/>\n            <SelectableOddsCell\n                selectedOutcome={selectedOutcome}\n                selectedMarket={selectedMarket}\n                eventSelected={eventSelected} event={event} market={2} outcome={1}/>\n            {event.notes && <NotesRow>\n                {event.notes}\n            </NotesRow>}\n        </EventCell>\n    )\n};\n\n\nexport const SelectEvent = ({eventSelected}) => {\n    const events = useStoreState(state => state.wagers.headToHeadEvents);\n    const [numSections, setNumSections] = useState(2);\n    const renderedEvents = events.slice(0, numSections)\n    const fetchMoreData = () => setNumSections(numSections + 1)\n\n    console.log(events[0])\n\n    return (\n        <React.Fragment>\n            <InfiniteScroll\n                dataLength={renderedEvents.length}\n                next={fetchMoreData}\n                hasMore={renderedEvents.length !== events.length}\n                loader={<h4>Loading...</h4>}\n                endMessage={\n                    <p style={{textAlign: \"center\"}}>\n                        <b>Huh, that's it.</b>\n                    </p>\n                }\n            >\n                {renderedEvents.map(section => <SportSection eventSelected={eventSelected} section={section}/>)}\n            </InfiniteScroll>\n        </React.Fragment>\n    )\n}","/Users/donnie/code/parledger/src/components/SportSelect.js",["153","154"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst sports = {\n    1: \"Football\",\n    215: \"Cricket\",\n    226: \"Baseball\",\n    227: \"Basketball\",\n    237: \"Golf\",\n    238: \"Boxing\",\n    239: \"Tennis\",\n    240: \"Soccer\",\n    1100: \"Handball\",\n    1200: \"Volleyball\",\n    1201: \"UFC/MMA\",\n    1203: \"Winter Olympics\",\n    1206: \"Horses Futures & Props\",\n    1250: \"Beach Volleyball\",\n    1600: \"Futsal\",\n    1900: \"Table Tennis\",\n    2100: \"Hockey\",\n    2700: \"Cycling\",\n    2900: \"Winter Sports\",\n    6000: \"Esports\",\n    7000: \"Numbers Game\",\n    22877: \"Rugby Union\",\n    22878: \"Rugby League\",\n    22881: \"Motor Sports\",\n    22883: \"Other Sports\",\n    22884: \"Snooker\",\n    22886: \"Darts\",\n    22888: \"Politics\"\n}\n\nconst SportIcon = styled.span`\n  font-size: 4em;\n`\n\nconst SportSelectContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nexport const SportSelect = ({}) => {\n    return (\n        <SportSelectContainer>\n            <SportIcon>\n                🏈\n            </SportIcon>\n            <SportIcon>\n                🏀\n            </SportIcon>\n            <SportIcon>\n                ⚾️\n            </SportIcon>\n            <SportIcon>\n                🏉\n            </SportIcon>\n        </SportSelectContainer>\n    )\n}","/Users/donnie/code/parledger/src/components/ConfirmWager.js",["155","156","157","158","159","160"],"import {Event, Outcome, TitleRow} from \"./SelectEvent\";\nimport React, {useState} from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport {useStoreActions, useStoreState} from \"easy-peasy\";\n\n\nconst OutcomeDescription = ({outcome}) => {\n    console.log(outcome);\n    if (outcome) {\n        return (\n            <span>\n                {outcome.description}\n                {outcome.price.handicap && <span>\n                    {' ' + outcome.price.handicap + ' '}\n                </span>}\n                {!outcome.price.handicap && <span>\n                    {' ' + outcome.price.american + ' '}\n                </span>}\n            </span>\n        )\n    } else {\n        return <span/>\n    }\n}\n\nconst EventDescription = ({event, market, outcome}) => {\n    const selectedMarket = event.displayGroups[0].markets[market];\n    const selectedOutcome = selectedMarket.outcomes[outcome];\n    const eventTime = new Date(event.startTime)\n    return (\n        <div>\n            <div> For {event.description} on {eventTime.toLocaleDateString()} at {eventTime.toLocaleTimeString()}</div>\n            <div>you picked <OutcomeDescription outcome={selectedOutcome}/> in a {selectedMarket.description} bet.</div>\n        </div>\n    )\n};\n\nconst BetAmountButton = styled.button`\n  border-radius: 0.3em;\n  color: white;\n  font-size: 1.2em;\n  padding: 0.3em;\n  border: 1px solid white;\n  background: none;\n\n  width: 100px;\n  margin: 1em;\n\n  :hover {\n    cursor: pointer;\n    background: #FFFFFF13;\n  }\n`\n\nconst BetAmountRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\n\nconst ErrorMessage = styled.div`\n  color: #FF4040;\n`\n\nconst SuccessMessage = styled.div`\n  color: #00C781;\n`\n\nexport const ConfirmWager = ({selection, opponent}) => {\n    const {handleSubmit, control, errors, register} = useForm();\n    const profile = useStoreState(state => state.firebase.profile);\n    const createWager = useStoreActions(actions => actions.wagers.createWager);\n    const [apiError, setApiError] = useState(null);\n    const [apiSuccess, setApiSuccess] = useState(null);\n\n    const saveWager = async (betAmount) => {\n        const wager = {\n            proposedTo: opponent.uid,\n            groupId: profile.groups[0],\n            type: 'BOVADA',\n            details: {\n                selection,\n                risk: betAmount,\n                win: betAmount\n            }\n        }\n\n        try {\n            await createWager(wager);\n            setApiSuccess(\"Wager was proposed!\")\n        } catch (error) {\n            setApiError(error.message);\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                Confirm your proposed bet with {opponent.displayName}\n            </div>\n            <TitleRow name={selection.event.description}/>\n            <Event eventSelected={() => {\n            }} event={selection.event} selectedMarket={selection.market} selectedOutcome={selection.outcome}/>\n            {apiSuccess\n                ? <SuccessMessage>{apiSuccess}</SuccessMessage>\n                : <div>\n                    How much to bet?\n                    <BetAmountRow>\n                        {[10, 20, 50, 100].map(it => <BetAmountButton\n                            onClick={() => saveWager(it)}>${it}</BetAmountButton>)}\n                    </BetAmountRow>\n                </div>}\n            {apiError && <ErrorMessage>\n                {apiError}\n            </ErrorMessage>}\n        </div>\n    )\n}","/Users/donnie/code/parledger/src/components/SplashScreen.js",[],"/Users/donnie/code/parledger/src/components/PersonalWagers.js",["161"],"import {useStoreState} from \"easy-peasy\";\n\nexport const PersonalWagers = ({}) => {\n    const profile = useStoreState(state => state.firebase.profile);\n\n    return (\n        <div>\n            <p>--- My Wagers ---</p>\n            {Object.values(profile?.wagers ?? {})\n                .filter(wager => wager.status !== 'rejected')\n                .map(wager => <pre> {JSON.stringify(wager, 0, 2)} </pre>)}\n        </div>\n    )\n}",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":9,"nodeType":"168","messageId":"169","endLine":1,"endColumn":24},{"ruleId":"166","severity":1,"message":"170","line":3,"column":9,"nodeType":"168","messageId":"169","endLine":3,"endColumn":20},{"ruleId":"166","severity":1,"message":"171","line":13,"column":12,"nodeType":"168","messageId":"169","endLine":13,"endColumn":22},{"ruleId":"166","severity":1,"message":"172","line":14,"column":11,"nodeType":"168","messageId":"169","endLine":14,"endColumn":18},{"ruleId":"166","severity":1,"message":"173","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":12},{"ruleId":"166","severity":1,"message":"174","line":27,"column":7,"nodeType":"168","messageId":"169","endLine":27,"endColumn":15},{"ruleId":"166","severity":1,"message":"175","line":61,"column":11,"nodeType":"168","messageId":"169","endLine":61,"endColumn":19},{"ruleId":"166","severity":1,"message":"172","line":62,"column":11,"nodeType":"168","messageId":"169","endLine":62,"endColumn":18},{"ruleId":"166","severity":1,"message":"176","line":7,"column":11,"nodeType":"168","messageId":"169","endLine":7,"endColumn":18},{"ruleId":"162","replacedBy":"177"},{"ruleId":"164","replacedBy":"178"},{"ruleId":"166","severity":1,"message":"179","line":9,"column":7,"nodeType":"168","messageId":"169","endLine":9,"endColumn":31},{"ruleId":"166","severity":1,"message":"180","line":3,"column":9,"nodeType":"168","messageId":"169","endLine":3,"endColumn":19},{"ruleId":"166","severity":1,"message":"181","line":4,"column":9,"nodeType":"168","messageId":"169","endLine":4,"endColumn":21},{"ruleId":"166","severity":1,"message":"182","line":25,"column":7,"nodeType":"168","messageId":"169","endLine":25,"endColumn":19},{"ruleId":"166","severity":1,"message":"183","line":33,"column":7,"nodeType":"168","messageId":"169","endLine":33,"endColumn":20},{"ruleId":"166","severity":1,"message":"184","line":37,"column":7,"nodeType":"168","messageId":"169","endLine":37,"endColumn":22},{"ruleId":"166","severity":1,"message":"185","line":52,"column":7,"nodeType":"168","messageId":"169","endLine":52,"endColumn":23},{"ruleId":"166","severity":1,"message":"186","line":57,"column":7,"nodeType":"168","messageId":"169","endLine":57,"endColumn":31},{"ruleId":"166","severity":1,"message":"187","line":63,"column":7,"nodeType":"168","messageId":"169","endLine":63,"endColumn":25},{"ruleId":"166","severity":1,"message":"188","line":74,"column":12,"nodeType":"168","messageId":"169","endLine":74,"endColumn":24},{"ruleId":"166","severity":1,"message":"189","line":74,"column":26,"nodeType":"168","messageId":"169","endLine":74,"endColumn":33},{"ruleId":"166","severity":1,"message":"190","line":74,"column":35,"nodeType":"168","messageId":"169","endLine":74,"endColumn":41},{"ruleId":"166","severity":1,"message":"191","line":74,"column":43,"nodeType":"168","messageId":"169","endLine":74,"endColumn":51},{"ruleId":"192","severity":1,"message":"193","line":83,"column":11,"nodeType":"194","endLine":83,"endColumn":20,"suggestions":"195"},{"ruleId":"166","severity":1,"message":"196","line":85,"column":11,"nodeType":"168","messageId":"169","endLine":85,"endColumn":18},{"ruleId":"166","severity":1,"message":"197","line":86,"column":11,"nodeType":"168","messageId":"169","endLine":86,"endColumn":19},{"ruleId":"166","severity":1,"message":"198","line":100,"column":11,"nodeType":"168","messageId":"169","endLine":100,"endColumn":30},{"ruleId":"166","severity":1,"message":"199","line":1,"column":9,"nodeType":"168","messageId":"169","endLine":1,"endColumn":17},{"ruleId":"166","severity":1,"message":"200","line":1,"column":19,"nodeType":"168","messageId":"169","endLine":1,"endColumn":28},{"ruleId":"166","severity":1,"message":"201","line":3,"column":15,"nodeType":"168","messageId":"169","endLine":3,"endColumn":28},{"ruleId":"166","severity":1,"message":"202","line":3,"column":30,"nodeType":"168","messageId":"169","endLine":3,"endColumn":39},{"ruleId":"166","severity":1,"message":"203","line":3,"column":41,"nodeType":"168","messageId":"169","endLine":3,"endColumn":60},{"ruleId":"166","severity":1,"message":"204","line":5,"column":13,"nodeType":"168","messageId":"169","endLine":5,"endColumn":17},{"ruleId":"166","severity":1,"message":"205","line":16,"column":7,"nodeType":"168","messageId":"169","endLine":16,"endColumn":19},{"ruleId":"166","severity":1,"message":"206","line":21,"column":7,"nodeType":"168","messageId":"169","endLine":21,"endColumn":17},{"ruleId":"166","severity":1,"message":"207","line":120,"column":12,"nodeType":"168","messageId":"169","endLine":120,"endColumn":20},{"ruleId":"166","severity":1,"message":"208","line":120,"column":22,"nodeType":"168","messageId":"169","endLine":120,"endColumn":33},{"ruleId":"166","severity":1,"message":"209","line":5,"column":9,"nodeType":"168","messageId":"169","endLine":5,"endColumn":20},{"ruleId":"166","severity":1,"message":"210","line":37,"column":7,"nodeType":"168","messageId":"169","endLine":37,"endColumn":18},{"ruleId":"166","severity":1,"message":"211","line":46,"column":7,"nodeType":"168","messageId":"169","endLine":46,"endColumn":22},{"ruleId":"166","severity":1,"message":"212","line":53,"column":7,"nodeType":"168","messageId":"169","endLine":53,"endColumn":18},{"ruleId":"166","severity":1,"message":"213","line":4,"column":7,"nodeType":"168","messageId":"169","endLine":4,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":45,"column":29,"nodeType":"216","messageId":"217","endLine":45,"endColumn":31},{"ruleId":"166","severity":1,"message":"218","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":23},{"ruleId":"166","severity":1,"message":"219","line":27,"column":7,"nodeType":"168","messageId":"169","endLine":27,"endColumn":23},{"ruleId":"166","severity":1,"message":"188","line":71,"column":12,"nodeType":"168","messageId":"169","endLine":71,"endColumn":24},{"ruleId":"166","severity":1,"message":"189","line":71,"column":26,"nodeType":"168","messageId":"169","endLine":71,"endColumn":33},{"ruleId":"166","severity":1,"message":"190","line":71,"column":35,"nodeType":"168","messageId":"169","endLine":71,"endColumn":41},{"ruleId":"166","severity":1,"message":"191","line":71,"column":43,"nodeType":"168","messageId":"169","endLine":71,"endColumn":51},{"ruleId":"214","severity":1,"message":"215","line":3,"column":32,"nodeType":"216","messageId":"217","endLine":3,"endColumn":34},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'useStoreActions' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'authLoaded' is assigned a value but never used.","'history' is assigned a value but never used.","'blob' is defined but never used.","'imageCss' is assigned a value but never used.","'firebase' is assigned a value but never used.","'results' is assigned a value but never used.",["220"],["221"],"'CreateGroupFormContainer' is assigned a value but never used.","'Controller' is defined but never used.","'PulseSpinner' is defined but never used.","'BetAmountRow' is assigned a value but never used.","'BetAmountSpan' is assigned a value but never used.","'SubmitBetButton' is assigned a value but never used.","'WagerAmountInput' is assigned a value but never used.","'WagerDescriptionTextArea' is assigned a value but never used.","'OpenWagerContainer' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'control' is assigned a value but never used.","'errors' is assigned a value but never used.","'register' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateEvents'. Either include it or remove the dependency array.","ArrayExpression",["222"],"'options' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'getFormErrorMessage' is assigned a value but never used.","'computed' is defined but never used.","'useEffect' is defined but never used.","'InstantSearch' is defined but never used.","'SearchBox' is defined but never used.","'connectStateResults' is defined but never used.","'lunr' is defined but never used.","'searchClient' is assigned a value but never used.","'StyledHits' is assigned a value but never used.","'showHits' is assigned a value but never used.","'setShowHits' is assigned a value but never used.","'SportSelect' is defined but never used.","'EventMarket' is assigned a value but never used.","'MarketContainer' is assigned a value but never used.","'EventHeader' is assigned a value but never used.","'sports' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Outcome' is defined but never used.","'EventDescription' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},"Update the dependencies array to be: [profile, updateEvents]",{"range":"225","text":"226"},[2261,2270],"[profile, updateEvents]"]